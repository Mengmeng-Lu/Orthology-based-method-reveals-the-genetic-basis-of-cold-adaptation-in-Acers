### This R script is to plot the numbers of genes in the identified candidate genes.

R

library(pheatmap)

da_0<-read.table("tmin_sel.PG.txt", header=T,row.names=1)

da<-da_0[,c(1:26)]

pdf("PG_num_plot.pdf")

pheatmap(da, display_numbers = da, cluster_rows=FALSE, cluster_cols=FALSE, fontsize=12, gaps_col = c(4), gaps_row = c(6,12,17))

dev.off()


### Align the sugar maple candidate genes to its reference genome using GMAP. 
### "acsa_genome_v2_masked_rm_contam.fasta" was downloaded from https://treegenesdb.org/FTP/Genomes/Aesc/v2.0/
### Then select only the "gene" annotation lines, sort and merge the gene coordinates.

~/gmap_build -D <dir for the database> -d <name of the database> acsa_genome_v2_masked_rm_contam.fasta 

~/gmap  --nthreads=8  --format=2  --nofails  -D <dir for the database> -d <name of the database>   <candidate genes.fa> > ${candidate genes}.gff

~/bedtools merge -i <candidate genes coordinates.bed> -c 4 -o collapse > <candidate genes coordinates.merge. bed>


################################################################
## Plot the candidate loci position on the reference genome   ##
################################################################

### gene_coord.merge.bed is the merged candidate gene coordinates in the sugar maple reference genome.
da<-read.table("gene_cord.merge.bed",sep="\t",header=F)

### These are the scaffold ID that contains the aligned candidate genes
da<-read.table("gene_cord.merge.bed",sep="\t",header=F)

chr_ID<-c("acsa_004","acsa_003","acsa_002","acsa_001",
          "acsa_384","acsa_388","acsa_386","acsa_387",
          "acsa_381","acsa_383","acsa_382","acsa_385",
          "acsa_380")

### These are the total length of the longest 13 scaffolds in the sugar maple reference genome.
len<-c(68459104/1000000,65226167/1000000,55331383/1000000,50470275/1000000,
       46969240/1000000,45724731/1000000,43483981/1000000,42652568/1000000,
       41337728/1000000,40376603/1000000,37324271/1000000,36639500/1000000,
       33992772/1000000)

#da_1<-subset(da,V1=="acsa_004")
da_2<-subset(da,V1=="acsa_003")
da_3<-subset(da,V1=="acsa_002")
da_4<-subset(da,V1=="acsa_001")
da_5<-subset(da,V1=="acsa_384")
da_6<-subset(da,V1=="acsa_388")
da_7<-subset(da,V1=="acsa_386")
#da_8<-subset(da,V1=="acsa_387")
da_9<-subset(da,V1=="acsa_381")
da_10<-subset(da,V1=="acsa_383")
da_11<-subset(da,V1=="acsa_382")
da_12<-subset(da,V1=="acsa_385")
da_13<-subset(da,V1=="acsa_380")





pdf("candi_loci_bar.pdf")

par(mar=c(5,6,1,2))

barplot(len, names.arg=chr_ID, las=1, horiz=TRUE,xlim=c(0,70),
        xlab="Length (Mbp)",cex.lab=1.5,space=2.3, col="white")

#points(da_1$V2/1000000,rep(2.5, length(da_1$V2/1000000)), col="red",pch=c("|"),cex=1.8)
points(da_2$V2/1000000,rep(6,length(da_2$V2/1000000)), col="plum4",pch=c("|"),cex=2.5)
points(da_3$V2/1000000,rep(9.5,length(da_3$V2/1000000)), col=c("plum4","bisque3","bisque3","brown3","brown3","brown3","plum4"),pch=c("|"),cex=2.5)
points(da_4$V2/1000000,rep(12.8,length(da_4$V2/1000000)), col="bisque3",pch=c("|"),cex=2.5)
points(da_5$V2/1000000,rep(16,length(da_5$V2/1000000)), col=c("green4","bisque3","green4","plum4","brown3"),pch=c("|"),cex=2.5)
points(da_6$V2/1000000,rep(19,length(da_6$V2/1000000)), col=c("green4","brown3"),pch=c("|"),cex=2.5)
points(da_7$V2/1000000,rep(22.5,length(da_7$V2/1000000)), col=c("bisque3","bisque3"),pch=c("|"),cex=2.5)
#points(da_8$V2/1000000,rep(25.3,length(da_8$V2/1000000)), col="red",pch=c("|"),cex=1)
points(da_9$V2/1000000,rep(29.2,length(da_9$V2/1000000)), col=c("plum4","brown3","green4"),pch=c("|"),cex=2.5)
points(da_10$V2/1000000,rep(32.5,length(da_10$V2/1000000)), col=c("green4","plum4","plum4"),pch=c("|"),cex=2.5)
points(da_11$V2/1000000,rep(35.7,length(da_11$V2/1000000)), col="plum4",pch=c("|"),cex=2.5)
points(da_12$V2/1000000,rep(39,length(da_12$V2/1000000)), col="green4",pch=c("|"),cex=2.5)
points(da_13$V2/1000000,rep(42.3,length(da_13$V2/1000000)), col="brown3",pch=c("|"),cex=2.5)

dev.off()



pdf("legend.pdf")

plot(1)

legend(x = "topleft",cex=1.8,legend=c("Intensified selection", "Relaxed selection",
                  "Positive & intensified selection","Positive selection"),  
       fill = c("brown3","green4","plum4","bisque")) 

dev.off()
